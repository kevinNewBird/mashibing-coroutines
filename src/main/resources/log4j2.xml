<?xml version="1.0" encoding="UTF-8" ?>
<!--status，log4j2自身的日志级别，OFF>FATAL>ERROR>WARN>INFO>DEBUG>TRACE>ALL-->
<!--monitorInterval，重新读取配置文件的间隔时间，单位为秒-->
<Configuration status="INFO" monitorInterval="30">
    <Properties>
        <Property name="basePath">D:\logs</Property>
        <Property name="LOG_PATTERN">[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n</Property>
    </Properties>
    <!--Appenders，输出源，用于定义日志输出的地方-->
    <Appenders>
        <!--控制台-->
        <Console name="CONSOLE-APPENDER" target="SYSTEM_OUT">
            <!--            <PatternLayout pattern="%d %p %c{1.} [%t] %m%n"/>-->
            <PatternLayout pattern="${LOG_PATTERN}"/>
        </Console>
        <!--RollingRandomAccessFile，按照一定的规则滚动文件-->
        <!--name，指定Appender的名字-->
        <!--fileName，当前日志文件的路径和名字-->
        <!--filePattern，当发生滚动时，文件的转移和重命名规则-->
        <RollingRandomAccessFile name="errorFile" fileName="${basePath}\error.log"
                                 filePattern="${basePath}\error-%d{MM-dd-yyyy}-%i.log">
            <!--Filters，决定日志事件能否被输出：ACCEPT(接受)，DENY(拒绝)，NEUTRAL(中立)；
            onMatch-该级别及以上，onMismatch-该级别以下-->
            <LevelRangeFilter minLevel="ERROR" maxLevel="ERROR" onMatch="ACCEPT" onMismatch="NEUTRAL"/>
            <!--            <PatternLayout>%d %p %c{1.} [%t] %m%n</PatternLayout>-->
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <!--Policies，日志文件滚动的策略-->
                <!--TimeBasedTriggeringPolicy，和filePattern结合使用，日期格式决定时间单位
                ，interval决定单位时间间隔；modulate，产生文件是否以0点偏移时间-->
                <!--SizeBasedTriggeringPolicy，日志文件大小滚动策略-->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <SizeBasedTriggeringPolicy size="19500KB"/>
            </Policies>
            <!--DefaultRolloverStrategy，默认滚动策略，max-日志文件保存的最多个数-->
            <DefaultRolloverStrategy max="10"/>
        </RollingRandomAccessFile>

        <RollingRandomAccessFile name="infoFile" fileName="${basePath}\info.log"
                                 filePattern="${basePath}\info-%d{MM-dd-yyyy}-%i.log">
            <!--Filters，决定日志事件能否被输出：ACCEPT(接受)，DENY(拒绝)，NEUTRAL(中立)；onMatch-该级别及以上，onMismatch-该级别以下-->
            <LevelRangeFilter minLevel="INFO" maxLevel="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
            <!--            <PatternLayout>%d %p %c{1.} [%t] %m%n</PatternLayout>-->
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <!--Policies，日志文件滚动的策略-->
                <!--TimeBasedTriggeringPolicy，和filePattern结合使用，日期格式决定时间单位，interval决定单位时间间隔；modulate，产生文件是否以0点偏移时间-->
                <!--SizeBasedTriggeringPolicy，日志文件大小滚动策略-->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <SizeBasedTriggeringPolicy size="19500KB"/>
            </Policies>
            <!--DefaultRolloverStrategy，默认滚动策略，max-日志文件保存的最多个数-->
            <DefaultRolloverStrategy max="10"/>
        </RollingRandomAccessFile>

    </Appenders>
    <Loggers>
        <!--每个配置都必须有一个Root logger，没有name属性、不支持additivity属性-->
        <!--level：日志输出级别，从低到高分别为：All<TRACE<DEBUG<INFO<WARN<ERROR<FATAL<OFF-->
        <!--includeLocation：输出位置信息需要栈快照，对性能影响很大，所以异步logger默认关闭该功能，可通过设置为true打开-->
        <!--AppenderRef：指定该日志输出到哪个Appender-->
        <Root level="INFO">
            <AppenderRef ref="CONSOLE-APPENDER"/>
        </Root>
        <!--name：该Logger所适用的类或者类所在的包路径,切记name不能重复，否则会导致失效-->
        <!--additivity：设置日志事件是否在Root logger输出，为避免重复输出，可设置为false-->
        <Logger name="com.mashibing.coroutines" level="ERROR" additivity="false">
            <AppenderRef ref="errorFile"/>
        </Logger>

        <Logger name="com.mashibing" level="INFO" additivity="true">
            <AppenderRef ref="infoFile"/>
        </Logger>
    </Loggers>
</Configuration>